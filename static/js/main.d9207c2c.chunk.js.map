{"version":3,"sources":["configs/colors.js","components/Button/styles.js","components/Button/Button.js","components/UserPanel/UserPanel.js","components/WorkSection/styles.js","components/Container/styles.js","components/Task/styles.js","components/Task/Task.js","components/WorkSection/WorkSection.js","components/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["bluedeepskyblue","white","ButtonWrapper","styled","button","props","isBolder","padding","backgroundColor","color","Button","buttonText","click","onClick","UserPanel","Title","p","TaskWrapper","div","WrapperRow","WrapperCol","InputTask","input","Task","value","WorkSection","tasks","data","map","word","en","pl","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEaA,EAAmB,UACnBC,EAAQ,OCARC,EAAgBC,IAAOC,OAAV,gJAGT,SAACC,GAAD,OAAWA,EAAMC,SAAW,MAAQ,SACxC,SAACD,GAAD,OAAWA,EAAME,QAAUF,EAAME,QAAU,UAClC,SAACF,GAAD,OAAWA,EAAMG,gBAAkBH,EAAMG,gBAAkBR,KACtE,SAACK,GAAD,OAAWA,EAAMI,MAAQJ,EAAMI,MDRf,a,gCEaZC,MAVf,YAAgD,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAAUP,EAAQ,iBAC3C,OACI,mCACI,cAACH,EAAD,yBAAeW,QAASD,GAAWP,GAAnC,aACKM,QCMFG,I,UAAAA,EATf,WACI,OACI,qCACI,cAAC,EAAD,CAAQH,WAAW,2BAA2BF,MAAOR,EAAOK,UAAQ,IACpE,cAAC,EAAD,CAAQK,WAAW,4BAA4BF,MAAOR,EAAOK,UAAQ,QCPpES,EAAQZ,IAAOa,EAAV,yEAKLC,EAAcd,IAAOe,IAAV,gHCLXC,EAAahB,IAAOe,IAAV,oIAQVE,EAAajB,IAAOe,IAAV,uICNVG,EAAYlB,IAAOmB,MAAV,qEACTtB,GCMEuB,MARf,YAA0B,IAAVC,EAAS,EAATA,MACZ,OACI,mCACI,cAACH,EAAD,CAAWG,MAAOA,OCqBfC,MArBf,YAA8B,IAEpBC,EAFmB,EAAPC,KAECC,KAAK,SAACC,GACrB,OACI,eAACZ,EAAD,WACI,cAAC,EAAD,CAAMO,MAAOK,EAAKC,KAClB,cAAC,EAAD,CAAMN,MAAOK,EAAKE,WAK9B,OACI,eAACX,EAAD,WACI,cAACL,EAAD,8BACA,cAACK,EAAD,UACKM,QCkBFM,MAhCf,WAoBI,OACI,qCACI,cAACb,EAAD,UACI,cAAC,EAAD,MAEJ,cAACC,EAAD,UACI,cAAC,EAAD,CAAaO,KAzBZ,CACT,CACIG,GAAI,SACJC,GAAI,QAER,CACID,GAAI,SACJC,GAAI,QAER,CACID,GAAI,WACJC,GAAI,YAER,CACID,GAAI,MACJC,GAAI,gB,MCdDE,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9207c2c.chunk.js","sourcesContent":["export const greenlawngreen = '#7cfc00';\r\nexport const whitesmoke =  '#f5f5f5';\r\nexport const bluedeepskyblue =  '#00bfff';\r\nexport const white = '#fff'","import styled from \"styled-components\";\r\nimport { bluedeepskyblue, whitesmoke } from \"../../configs/colors\";\r\n\r\nexport const ButtonWrapper = styled.button`\r\n  border: none;\r\n  font-size: 1rem;\r\n  font-weight: ${(props) => props.isBolder ? '700' : '400'};\r\n  padding: ${(props) => props.padding ? props.padding : '20px'};\r\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : bluedeepskyblue};\r\n  color: ${(props) => props.color ? props.color : whitesmoke};\r\n`;\r\n","import React from 'react';\r\nimport { ButtonWrapper } from \"./styles\";\r\n\r\n\r\nfunction Button({buttonText, click, ...props}) {\r\n    return (\r\n        <>\r\n            <ButtonWrapper onClick={click} {...props}>\r\n                {buttonText}\r\n            </ButtonWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Button from \"../Button\";\r\nimport { white } from \"../../configs/colors\";\r\n\r\nfunction UserPanel() {\r\n    return (\r\n        <>\r\n            <Button buttonText='Generate words in Polish' color={white} isBolder/>\r\n            <Button buttonText='Generate words in English' color={white} isBolder/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserPanel;","import styled from 'styled-components';\r\n\r\nexport const Title = styled.p`\r\n  font-size: 1.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const TaskWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  gap: 10px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const WrapperRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const WrapperCol = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;","import styled from \"styled-components\";\r\n\r\nimport { bluedeepskyblue } from \"../../configs/colors\";\r\n\r\nexport const InputTask = styled.input`\r\n    color: ${bluedeepskyblue};\r\n    text-align: center;\r\n`;","import React from 'react';\r\nimport { InputTask } from \"./styles\";\r\n\r\nfunction Task({ value }) {\r\n    return (\r\n        <>\r\n            <InputTask value={value} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport { TaskWrapper, Title } from './styles';\r\nimport { WrapperCol } from \"../Container/styles\";\r\nimport Task from \"../Task\";\r\n\r\nfunction WorkSection({data}) {\r\n\r\n    const tasks = data.map( (word) => {\r\n        return (\r\n            <TaskWrapper>\r\n                <Task value={word.en}/>\r\n                <Task value={word.pl}/>\r\n            </TaskWrapper>\r\n        )\r\n    } )\r\n\r\n    return (\r\n        <WrapperCol>\r\n            <Title>Let's learn! :)</Title>\r\n            <WrapperCol>\r\n                {tasks}\r\n            </WrapperCol>\r\n        </WrapperCol>\r\n    );\r\n}\r\n\r\nexport default WorkSection;","import React from 'react';\r\n\r\nimport UserPanel from \"../UserPanel\";\r\nimport WorkSection from \"../WorkSection\";\r\n\r\nimport { WrapperCol, WrapperRow } from './styles';\r\n\r\nfunction Container() {\r\n    const data = [\r\n        {\r\n            en: \"mother\",\r\n            pl: \"mama\",\r\n        },\r\n        {\r\n            en: \"father\",\r\n            pl: \"tata\",\r\n        },\r\n        {\r\n            en: \"daughter\",\r\n            pl: \"c√≥rka\",\r\n        },\r\n        {\r\n            en: \"son\",\r\n            pl: \"syn\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <WrapperRow>\r\n                <UserPanel />\r\n            </WrapperRow>\r\n            <WrapperCol>\r\n                <WorkSection data={data}/>\r\n            </WrapperCol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Container;","import Container from './components/Container';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}